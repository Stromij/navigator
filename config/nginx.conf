# auto detects a good number of processes to run
worker_processes auto;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}


http {
    # what times to include
    include       /etc/nginx/mime.types;
    # what is the default one
    default_type  application/octet-stream;

    client_max_body_size 10G;

    upstream tank {
        server tank:8888;
    }

    upstream exhauster {
        server exhauster:8080;
    }

    server {
        # listen on port 80
        listen 80;

        # what file to server as index
        index index.html index.htm;


        location ^~ /navigator {
            alias /usr/share/nginx/html;
            try_files $uri $uri/ =404;
        }

        location /tank/ {
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            rewrite ^/tank(.*)$ $1 break;
            proxy_pass http://tank;
        }

        location /exhauster/ {
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            rewrite ^/exhauster(.*)$ $1 break;
            proxy_pass http://exhauster;
        }

        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }

        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }
}
